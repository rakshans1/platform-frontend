// sass-lint:disable force-pseudo-nesting
// sass-lint:disable nesting-depth

$_hover-color: $neu-piss-yellow;
$_focus-color: $neu-piss-yellow;
$_active-color: lighten($_hover-color, 20%);

.button {
  background: transparent;
  border: 0;
  margin: 0;
  padding: 0;

  color: inherit;
  font: inherit;
  line-height: inherit;

  &:focus,
  .content:focus {
    outline: none;
  }

  &:focus {
    .content {
      box-shadow: 0 0 px-to-rem(3px) px-to-rem(6px) $_focus-color;
    }
  }

  > .content {
    align-items: center;
    display: flex;
    flex-shrink: 0;
    justify-content: center;
    padding: px-to-rem(8px) px-to-rem(20px);
    position: relative;
    text-decoration: inherit;
    transition: 200ms ease-out background-color, color;

    // makes button same in height with different content (for e.g. loading indicator)
    &::before {
      content: "\A0"; // space character
      width: 0;
    }
  }

  &:disabled,
  &-primary:disabled, // sass-lint:disable-line force-pseudo-nesting
  &-secondary:disabled, // sass-lint:disable-line force-pseudo-nesting
  &-inline:disabled, // sass-lint:disable-line force-pseudo-nesting
  &-simple:disabled { // sass-lint:disable-line force-pseudo-nesting
    color: $neu-pale-grey;
    cursor: not-allowed;

    &:hover,
    &.is-active {
      .content {
        color: $neu-pale-grey;
        background-color: transparent;
        border-color: currentColor;
      }
    }
  }

  // types
  &-primary {
    @include font-button-default;

    font-weight: $font-weight-bold;
    text-transform: uppercase;

    .content {
      border: px-to-rem(2px) solid currentColor;
      min-width: px-to-rem(138px);
    }

    &:hover,
    &.is-active  {
      .content {
        background-color: $_hover-color;
        border-color: $_hover-color;
        color: $neu-white-two;
      }
    }

    &:active {
      .content {
        background-color: $_active-color;
        border-color: $_active-color;
        color: $neu-white-two;
      }
    }

    &:global(.small) {
      @include font-button-small;

      .content {
        border: px-to-rem(1px) solid currentColor;
      }
    }

    &:global(.huge) {
      border: px-to-rem(1px) solid currentColor;
    }

    &:global(.block) {
      .content {
        min-width: auto;
      }
    }
  }

  &-secondary {
    @include font-tab;

    font-weight: $font-weight-bold;
    text-transform: uppercase;

    &:global(.small) {
      @include font-label;
    }

    &:hover,
    &.is-active  {
      color: $_hover-color;
    }

    &:active {
      color: $_active-color;
    }
  }

  &-simple {
    @include font-label;

    font-weight: normal;
    text-transform: inherit;

    .content {
      padding: 0;
    }
  }

  &-inline {
    @include font-default;

    &:hover,
    &.is-active,
    &:focus {
      .content {
        text-decoration: none;
      }
    }

    .content {
      padding: 0;
      margin-top: 0;
      justify-content: initial;

      text-decoration: underline;
    }
  }

  // widths
  &:global(.block) {
    display: block;
    width: 100%;
  }

  &:global(.wide) {
    min-width: px-to-rem(220px);
  }

  // sizes
  &:global(.small) {
    font-weight: $font-weight-medium;

    > .content {
      padding: px-to-rem(3px) px-to-rem(8px);
    }
  }

  &:global(.huge) {
    @include font-headline-medium;

    min-width: px-to-rem(216px);

    .content {
      padding: px-to-rem(12px) px-to-rem(60px);
      border: 0;
    }
  }

  // themes
  &-white {
    color: $neu-white-two;
  }

  &-dark {
    color: $neu-greyish-brown;
  }

  &-graphite {
    color: $neu-slate-grey;
  }

  &-brand {
    background-color: $neu-piss-yellow;
    color: $neu-greyish-brown;

    :local(.content) {
      border-color: $neu-piss-yellow;
    }
  }

  &-neon {
    background-color: $neu-neon-yellow;
    color: $neu-greyish-brown;
    border: px-to-rem(1px) solid $neu-neon-yellow;

    :local(.content) {
      border-color: $neu-neon-yellow;
    }
  }

  &-silver {
    color: $neu-slate-grey;
  }

  &-green {
    color: $neu-seaweed;
  }

  // elements
  &:global {

    &.icon-before {
      :global(.inline-icon) {
        margin-right: 10px;
      }
    }

    &.icon-after {
      :global(.inline-icon) {
        margin-left: 10px;
      }
    }
  }

  :global(.inline-icon) {
    color: currentColor;
    height: px-to-rem(20px);
    width: px-to-rem(20px);
  }

}
