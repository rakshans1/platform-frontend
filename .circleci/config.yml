version: 2.1
jobs:
  install-lint:
  # install and lint is taken as one job to remove required time for downloading cache
    docker:
      - image: krzkaczor/neufund-platform-base
    working_directory: /home/circleci/app

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v14-deps-{{ checksum "package.json" }}
            - v14-deps-
      - run:
          mkdir -p /home/circleci/.cache/Cypress && cp -R /home/circleci/.cache/Cypress
          ~/.cache/Cypress

      # Installation
      - run: yarn --frozen-lockfile
      # Linting
      - run: yarn lint

      - run: cp -R ~/.cache/Cypress/ /home/circleci/.cache/

      - save_cache:
          paths:
            - node_modules
            - /home/circleci/.cache/Cypress
          key: v14-deps-{{ checksum "package.json" }}

  build-frontend:
    docker:
      - image: krzkaczor/neufund-platform-base
    working_directory: /home/circleci/app

    steps:
      - checkout
      - restore_cache:
          keys:
            - v14-deps-{{ checksum "package.json" }}
            - v14-deps-

      - run: yarn prepare
      - run:
          command: yarn build:prod:e2e
          no_output_timeout: 10m
      # If build takes more than 10mins then fail
      - persist_to_workspace:
          root: /home/circleci/app
          paths:
            - ./
  test:
    docker:
      - image: krzkaczor/neufund-platform-base
    working_directory: /home/circleci/app

    steps:
      - checkout
      - restore_cache:
          keys:
            - v14-deps-{{ checksum "package.json" }}
            - v14-deps-
      - run: yarn

      - run: yarn test:browser-coverage && yarn test:node

  test-e2e:
    machine:
      enabled: true
      image: circleci/classic:edge
      docker_layer_caching: true

    parallelism: 4

    working_directory: /home/circleci/app

    steps:
      - attach_workspace:
          at: /home/circleci/app
      - checkout
      - run: ./.circleci/install-yarn.sh
      - restore_cache:
          keys:
            - v14-deps-{{ checksum "package.json" }}
            - v14-deps-
      - run: source /opt/circleci/.nvm/nvm.sh && yarn prepare

      - run:
          command: source /opt/circleci/.nvm/nvm.sh && yarn test:e2e
          no_output_timeout: 30m

  test-e2e-chrome:
    machine:
      enabled: true
      image: circleci/classic:edge
      docker_layer_caching: true

    parallelism: 1

    working_directory: /home/circleci/app

    steps:
      - attach_workspace:
          at: /home/circleci/app
      - run: ./.circleci/install-yarn.sh
      - run: ./.circleci/install-chrome.sh
      - restore_cache:
          keys:
            - v14-deps-{{ checksum "package.json" }}
            - v14-deps-
      - run: source /opt/circleci/.nvm/nvm.sh && yarn prepare

      - run:
          command: source /opt/circleci/.nvm/nvm.sh && yarn test:e2e:chrome
          no_output_timeout: 30m

  danger-ci:
    docker:
      - image: krzkaczor/neufund-platform-base
    working_directory: /home/circleci/app

    steps:
      - checkout
      - restore_cache:
          keys:
            - v14-deps-{{ checksum "package.json" }}
            - v14-deps-
      - run: yarn storybook:screenshots
      - run:
          (export BASE_KEY=$(git rev-parse origin/master) && export CURRENT_KEY=${CIRCLE_SHA1} &&
          ./.circleci/vis-reg-run.sh)
      - run: yarn danger ci

  bundlewatcher:
    docker:
      - image: krzkaczor/neufund-platform-base
    working_directory: /home/circleci/app

    steps:
      - checkout
      - restore_cache:
          keys:
            - v14-deps-{{ checksum "package.json" }}
            - v14-deps-

      - run: yarn 
      - run: yarn bundlewatcher

  deploy-storybook:
    docker:
      - image: krzkaczor/neufund-platform-base
    working_directory: /home/circleci/app

    steps:
      - checkout
      - restore_cache:
          keys:
            - v14-deps-{{ checksum "package.json" }}
            - v14-deps-
      - run: yarn prepare

      - run: yarn deploy-storybook --ci --host-token-env-variable=DANGER_GITHUB_API_TOKEN

workflows:
  version: 2

  mainflow:
    jobs:
      - install-lint
      - build-frontend:
          requires:
            - install-lint
      - test:
         requires:
           - install-lint
      - test-e2e:
          requires:
            - build-frontend
      - danger-ci:
         requires:
           - install-lint
      - bundlewatcher:
         requires:
           - install-lint

  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
                - production
    jobs:
      - install-lint
      - test:
          requires:
            - install-lint
      - test-e2e:
          requires:
            - install-lint
      - danger-ci:
          requires:
            - install-lint

  deploy-storybook:
    jobs:
      - deploy-storybook:
          filters:
            branches:
              only: master
